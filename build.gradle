plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.ohgiraffers'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //웹소켓!
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // security 를 사용하기 위한 lib
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    //jwt 토큰을 사용하기 위한 lib
    implementation "io.jsonwebtoken:jjwt:0.9.1"

    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

    // http 요청이 들어올 때 요청 데이터가 json 으로 반환이 되는데 이것을 간편하게 포맷팅 해주는 lib
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    // LocalDateTime 을 serialize 하기 위해서 추가해야 하는 모듈
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.1'


}

tasks.named('test') {
    useJUnitPlatform()
}
